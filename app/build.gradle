plugins {
    alias libs.plugins.com.android.application
    alias libs.plugins.com.github.triplet.play
    alias libs.plugins.com.google.firebase.appdistribution
    alias libs.plugins.org.jetbrains.kotlin.android
    alias libs.plugins.com.starter.easylauncher
    alias libs.plugins.androidx.navigation.safeargs
    alias libs.plugins.com.google.gms.google.services
    alias libs.plugins.com.google.firebase.crashlytics
    alias libs.plugins.com.google.firebase.firebase.perf
    alias libs.plugins.com.google.devtools.ksp
    id "kotlin-parcelize"
    id "kotlin-kapt"
}

android {
    compileSdkVersion libs.versions.compile.sdk.get().toInteger()

    defaultConfig {
        applicationId "cz.mtrakal.version_catalog_issue_80"
        minSdkVersion libs.versions.min.sdk.get().toInteger()
        targetSdkVersion libs.versions.target.sdk.get().toInteger()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
//        allWarningsAsErrors = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // MultiDex
    implementation(libs.androidx.multidex)

    // Desugaring (support java 8 functions on lower SDK (23-26)
    coreLibraryDesugaring(libs.com.android.tools.desugar.jdk.libs)

    // Kotlin
    implementation(libs.org.jetbrains.kotlin.kotlin.stdlib.jdk8)
    implementation(libs.org.jetbrains.kotlin.kotlin.reflect)
    implementation(libs.org.jetbrains.kotlinx.kotlinx.coroutines.core)
    implementation(libs.org.jetbrains.kotlinx.kotlinx.coroutines.android)

    // Support libs
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.cardview)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.gridlayout)
    implementation(libs.androidx.paging.paging.runtime.ktx)
    implementation(libs.androidx.core.core.ktx)
    implementation(libs.com.google.android.material)
    implementation(libs.com.google.android.flexbox)
    implementation(libs.androidx.fragment.fragment.ktx)

    // Koin
    // Koin main features for Android (Scope,ViewModel ...)
//    implementation(libs.io.insert.koin.koin.android)
    // Koin for Jetpack WorkManager
//    implementation(libs.io.insert.koin.koin.androidx.workmanager)
    // Koin for Navigation Graph
//    implementation(libs.io.insert.koin.koin.androidx.navigation)
    // Koin KSP
//    implementation(libs.io.insert.koin.koin.android.annotations)
//    ksp(libs.io.insert.koin.koin.ksp.compiler)

    // Epoxy
    implementation(libs.com.airbnb.android.epoxy)
    implementation(libs.com.airbnb.android.epoxy.paging)
//    implementation (libs.com.airbnb.android.epoxy.paging3)
    implementation(libs.com.airbnb.android.epoxy.databinding)
    kapt(libs.com.airbnb.android.epoxy.processor)

    // Unit
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.test.runner)
    androidTestImplementation(libs.androidx.test.espresso.espresso.core)

    // ViewModel and LiveData
    implementation(libs.androidx.lifecycle.lifecycle.viewmodel.ktx)
    implementation(libs.androidx.lifecycle.lifecycle.livedata.ktx)
    implementation(libs.androidx.lifecycle.lifecycle.common.java8)

    // Room
    implementation(libs.androidx.room.room.runtime)
    implementation(libs.androidx.room.room.ktx)
//    implementation (libs.androidx.room.room.paging)
    ksp(libs.androidx.room.room.compiler)

    // Work
//    implementation(libs.androidx.work.work.runtime.ktx)

    // Gson
    implementation(libs.com.google.code.gson)
    implementation(libs.com.squareup.moshi)
    implementation(libs.com.squareup.moshi.moshi.kotlin)
    implementation(libs.com.squareup.moshi.moshi.adapters)
//    kapt(libs.com.squareup.moshi.moshi.kotlin.codegen)

    // Retrofit 2
    implementation(libs.com.squareup.retrofit2.retrofit)
    implementation(libs.com.squareup.retrofit2.converter.gson)
    implementation(libs.com.squareup.retrofit2.converter.moshi)

    implementation platform(libs.com.squareup.okhttp3.okhttp.bom)
    // define any required OkHttp artifacts without version
    implementation(libs.com.squareup.okhttp3.okhttp)
    implementation(libs.com.squareup.okhttp3.logging.interceptor)

    // Images
    implementation(libs.androidx.exifinterface)

    implementation(libs.com.github.bumptech.glide)
    implementation(libs.com.github.bumptech.glide.okhttp3.integration)
    kapt(libs.com.github.bumptech.glide.compiler)
    implementation(libs.com.github.technoir42.glide.debug.indicator)

    // Dexter - DEPRECATED
    implementation(libs.com.karumi.dexter)

    // https.//github.com/permissions-dispatcher/PermissionsDispatcher/tree/master/ktx
    implementation(libs.com.github.permissions.dispatcher.ktx)

    // Logs
    implementation(libs.com.jakewharton.timber)

    // https.//github.com/AckeeCZ/android-user-agent/issues/3
    implementation(libs.io.github.ackeecz.user.agent)

    // Material progress
    implementation(libs.com.pnikosis.materialish.progress)

    // RecyclerView indicator
    implementation(libs.me.relex.circleindicator)

    // PinEditText
    implementation(libs.io.github.chaosleung.pinview)

    // keyboard watcher
//    implementation(libs.net.yslibrary.keyboardvisibilityevent)

    // Facebook
//    implementation(libs.com.facebook.android.facebook.login)
//    implementation(libs.com.facebook.android.facebook.android.sdk)

    // Google maps utils
    implementation(libs.com.google.maps.android.android.maps.utils)

    // Play services
    implementation(libs.com.google.android.gms.play.services.maps)
    implementation(libs.com.google.android.gms.play.services.location)
    implementation(libs.com.google.android.gms.play.services.auth)

    // JodaTime
    implementation(libs.net.danlew.android.joda)
    testImplementation(libs.joda.time)

    // EasyImage
    implementation(libs.com.github.jkwiecien.EasyImage)

    // Braintree
    // https.//github.com/braintree/braintree_android/releases

    // https.//github.com/braintree/braintree-android-drop-in/releases
//    implementation(libs.com.braintreepayments.api.drop.in)

    // to offer card payments
//    implementation(libs.com.braintreepayments.api.card)
    // to collect device data
//    implementation(libs.com.braintreepayments.api.data.collector)
    // to offer PayPal
//    implementation(libs.com.braintreepayments.api.paypal)
    // to offer local payments
//    implementation(libs.com.braintreepayments.api.local.payment)
    // to offer Google Pay
//    implementation(libs.com.braintreepayments.api.google.pay)
    // to perform 3DS verification
    // https.//developer.paypal.com/braintree/docs/guides/3d-secure/client-side/android/v4
//    implementation(libs.com.braintreepayments.api.three.d.secure)


    // CountryCode Picker
    implementation(libs.com.github.joielechong.countrycodepicker)

    // Camera
//    implementation(libs.androidx.camera.camera.camera2)
//    implementation(libs.androidx.camera.camera.lifecycle)
//    implementation(libs.androidx.camera.camera.view)
//    implementation(libs.androidx.camera.camera.extensions)

    // Firebase
//    implementation platform(libs.com.google.firebase.firebase.bom)
//    implementation(libs.com.google.firebase.firebase.iid)
//    implementation(libs.com.google.firebase.firebase.messaging.ktx)
//    implementation(libs.com.google.firebase.firebase.config.ktx)
//    implementation(libs.com.google.firebase.firebase.core)
//    implementation(libs.com.google.firebase.firebase.dynamic.links.ktx)
//    implementation(libs.com.google.firebase.firebase.auth.ktx)
//    implementation(libs.com.google.firebase.firebase.analytics.ktx)
//    implementation(libs.com.google.firebase.firebase.database.ktx)
//    implementation(libs.com.google.firebase.firebase.firestore.ktx)
//    implementation(libs.com.google.firebase.firebase.crashlytics.ktx)
//    implementation(libs.com.google.firebase.firebase.perf.ktx)

    // Material dialogs
    implementation(libs.com.afollestad.material.dialogs.datetime)

    // In-app updates
    implementation(libs.com.google.android.play.core)

    // app versions compare
    implementation(libs.io.github.g00fy2.versioncompare)

    // Lokalise - https.//maven.lokalise.com/com/lokalise/android/sdk/
//    implementation(libs.com.lokalise.android.sdk) {
//        transitive = true
//    }

    // Stetho
//    debugImplementation(libs.com.facebook.stetho)
//    implementation(libs.com.facebook.stetho.stetho.okhttp3)

    // Navigation
    implementation(libs.androidx.navigation.navigation.fragment.ktx)
    implementation(libs.androidx.navigation.navigation.ui.ktx)

    // Security - crypto
//    implementation(libs.androidx.security.security.crypto)

    // View
    implementation(libs.com.airbnb.android.lottie)

    // https.//github.com/Baseflow/PhotoView
    implementation(libs.com.github.chrisbanes.PhotoView)

    // https.//github.com/mapbox/mapbox-search-android/releases
//    implementation(libs.com.mapbox.search.mapbox.search.android)

    // core moengage features
    implementation(moengage.core)
    // optionally add this to use the InApp feature
    implementation(moengage.inapp)

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation(libs.com.squareup.leakcanary.leakcanary.android)
}